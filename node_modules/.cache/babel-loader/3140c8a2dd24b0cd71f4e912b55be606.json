{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Desktop/ReactWebApp/db-web-app/src/Components/Music.js\";\nimport React, { Component } from \"react\";\nimport Sound from 'react-sound';\n\nclass Music extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      play: false\n    };\n    this.audio = new Sound(\"src/resources/audio/alertSound.wav\");\n\n    this.togglePlay = () => {// this.audio.play((success) => {\n      //     if (success) {\n      //         console.log('successfully finished playing');\n      //     } else {\n      //         console.log('playback failed due to audio decoding errors');\n      //     }\n      // });\n      // this.setState({ play: !this.state.play }, () => {\n      //     this.state.play ? this.audio.play() : this.audio.pause();\n      // });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Sound, {\n      url: \"cool_sound.mp3\",\n      playStatus: Sound.status.PLAYING,\n      playFromPosition: 300\n      /* in milliseconds */\n      ,\n      onLoading: this.handleSongLoading,\n      onPlaying: this.handleSongPlaying,\n      onFinishedPlaying: this.handleSongFinishedPlaying,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Music;","map":{"version":3,"sources":["/Users/brian/Desktop/ReactWebApp/db-web-app/src/Components/Music.js"],"names":["React","Component","Sound","Music","state","play","audio","togglePlay","render","status","PLAYING","handleSongLoading","handleSongPlaying","handleSongFinishedPlaying"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACJC,MAAAA,IAAI,EAAE;AADF,KADkB;AAAA,SAI1BC,KAJ0B,GAIlB,IAAIJ,KAAJ,CAAU,oCAAV,CAJkB;;AAAA,SAM1BK,UAN0B,GAMb,MAAM,CAGX;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACH,KAnByB;AAAA;;AAqB1BC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD;AACI,MAAA,GAAG,EAAC,gBADR;AAEI,MAAA,UAAU,EAAEN,KAAK,CAACO,MAAN,CAAaC,OAF7B;AAGI,MAAA,gBAAgB,EAAE;AAAI;AAH1B;AAII,MAAA,SAAS,EAAE,KAAKC,iBAJpB;AAKI,MAAA,SAAS,EAAE,KAAKC,iBALpB;AAMI,MAAA,iBAAiB,EAAE,KAAKC,yBAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH;;AAhCyB;;AAmC9B,eAAeV,KAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Sound from 'react-sound'\n\nclass Music extends Component {\n    state = {\n        play: false\n    }\n    audio = new Sound(\"src/resources/audio/alertSound.wav\");\n\n    togglePlay = () => {\n\n\n            // this.audio.play((success) => {\n            //     if (success) {\n            //         console.log('successfully finished playing');\n            //     } else {\n            //         console.log('playback failed due to audio decoding errors');\n            //     }\n            // });\n        // this.setState({ play: !this.state.play }, () => {\n        //     this.state.play ? this.audio.play() : this.audio.pause();\n        // });\n    }\n\n    render() {\n        return (\n            <Sound\n                url=\"cool_sound.mp3\"\n                playStatus={Sound.status.PLAYING}\n                playFromPosition={300 /* in milliseconds */}\n                onLoading={this.handleSongLoading}\n                onPlaying={this.handleSongPlaying}\n                onFinishedPlaying={this.handleSongFinishedPlaying}\n            />\n        );\n    }\n}\n\nexport default Music;"]},"metadata":{},"sourceType":"module"}